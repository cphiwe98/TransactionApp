@model TransactionApp.Models.Transaction

@{
    ViewBag.Title = "Create";
}

<h2>Add</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Transaction</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Label("Client", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ClientId, (SelectList)ViewBag.Client, "Select Client", htmlAttributes: new { @class = "form-control", id = "client", @onfocusout = "getOldBalance()" })
            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Transaction Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TransactionTypeId, (SelectList)ViewBag.Transationtype, "Select Transation Type", htmlAttributes: new { @class = "form-control", id = "type" })
            @Html.ValidationMessageFor(model => model.TransactionTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="oldBalance" class="form-group">
        @Html.Label("Current Balance", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Old Amount", new { htmlAttributes = new { @class = "form-control", id = "oldAmount", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", id = "amount", @onfocusout = "CalcBalance()" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>


    <div id="newBalance" class="form-group">
        @Html.Label("New Balance", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("New Amount", new { htmlAttributes = new { @class = "form-control", id = "newAmount", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
<script>
    $(document).ready(function () {
        $('#newBalance').hide(); 
        $('#oldBalance').hide(); 
    });
    function CalcBalance() {
        $.get("/Transaction/CalBalance", {
            clientId: $('#client').val(), typeId: $('#type').val(), amount: $('#amount').val()
        }, function (data) {

                $('#newBalance').show();
                $('#newAmount').val(data);
        });
    }
    function getOldBalance() {
        $.get("/Transaction/GetOldBalance", {
            clientId: $('#client').val()
        }, function (data) {

            $('#oldBalance').show();
            $('#oldAmount').val(data);
        });
    }
</script>